# Generated by Django 5.0.2 on 2024-02-13 13:49

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InductionMotor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('serial_number', models.CharField(max_length=20)),
                ('customer_name', models.CharField(max_length=100)),
                ('sales_order_number', models.CharField(max_length=20)),
                ('tag', models.CharField(blank=True, max_length=50, null=True)),
                ('material', models.CharField(blank=True, max_length=50, null=True)),
                ('frame', models.CharField(blank=True, max_length=50, null=True)),
                ('mounting', models.CharField(blank=True, max_length=50, null=True)),
                ('drawing', models.CharField(blank=True, max_length=50, null=True)),
                ('enclosure', models.CharField(blank=True, max_length=50, null=True)),
                ('altitude_M', models.PositiveIntegerField(blank=True, null=True)),
                ('duty_cycle', models.CharField(blank=True, max_length=50, null=True)),
                ('design', models.CharField(blank=True, max_length=50, null=True)),
                ('insulation_class', models.CharField(blank=True, max_length=50, null=True)),
                ('temperature_rise_K', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('ambient_temperature_C', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('service_factor', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('voltage', models.PositiveIntegerField(blank=True, null=True)),
                ('current', models.PositiveIntegerField(blank=True, null=True)),
                ('power', models.PositiveIntegerField(blank=True, null=True)),
                ('frequency', models.PositiveIntegerField(blank=True, null=True)),
                ('speed', models.PositiveIntegerField(blank=True, null=True)),
                ('p_f', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('efficiency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('electric_resistance', models.CharField(blank=True, choices=[('ROUTINE', 'Routine'), ('TYPE', 'Type'), ('SPECIAL', 'Special')], max_length=20, null=True)),
                ('electric_resistance_test_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('NOT_FOUND', 'Not Found')], max_length=10, null=True)),
                ('temperature_rise_nominal_condition', models.CharField(blank=True, choices=[('ROUTINE', 'Routine'), ('TYPE', 'Type'), ('SPECIAL', 'Special')], max_length=20, null=True)),
                ('temperature_rise_nominal_condition_test_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('NOT_FOUND', 'Not Found')], max_length=10, null=True)),
                ('performance_determination', models.CharField(blank=True, choices=[('ROUTINE', 'Routine'), ('TYPE', 'Type'), ('SPECIAL', 'Special')], max_length=20, null=True)),
                ('performance_determination_test_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('NOT_FOUND', 'Not Found')], max_length=10, null=True)),
                ('no_load', models.CharField(blank=True, choices=[('ROUTINE', 'Routine'), ('TYPE', 'Type'), ('SPECIAL', 'Special')], max_length=20, null=True)),
                ('no_load_test_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('NOT_FOUND', 'Not Found')], max_length=10, null=True)),
                ('Withstand_voltage', models.CharField(blank=True, choices=[('ROUTINE', 'Routine'), ('TYPE', 'Type'), ('SPECIAL', 'Special')], max_length=20, null=True)),
                ('Withstand_voltage_test_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('NOT_FOUND', 'Not Found')], max_length=10, null=True)),
                ('insulation_resistance', models.CharField(blank=True, choices=[('ROUTINE', 'Routine'), ('TYPE', 'Type'), ('SPECIAL', 'Special')], max_length=20, null=True)),
                ('insulation_resistance_test_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('NOT_FOUND', 'Not Found')], max_length=10, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='induction_motor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricResistanceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('resistance_ohm_1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('resistance_ohm_2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('resistance_ohm_3', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('ambient_temperature_C', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unbalance_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('induction_motor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='motor_testing.inductionmotor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InsulationResistanceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('insulation_resistance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('time_in_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('ambient_temperature_C', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('humidity_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('induction_motor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='motor_testing.inductionmotor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NoLoadTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('current', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('power', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('frequency', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('speed', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('direction_of_rotation', models.CharField(blank=True, choices=[('CLOCKWISE', 'Clockwise'), ('ANTI_CLOCKWISE', 'Anti Clockwise')], max_length=20, null=True)),
                ('induction_motor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='motor_testing.inductionmotor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PerformanceDeterminationTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('frequency', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('nominal_t', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('load', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('current', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('slip', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))])),
                ('speed', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('efficiency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cos', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('induction_motor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='induction_motor', to='motor_testing.inductionmotor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemperatureRiseTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('winding', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('frequency', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('de_bearing', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('nde_bearing', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('induction_motor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='motor_testing.inductionmotor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WithstandVoltageACTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('voltage_kv', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('time_in_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('induction_motor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='motor_testing.inductionmotor')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
